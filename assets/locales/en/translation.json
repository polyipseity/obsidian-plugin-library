{
	"commands": {
		"export-settings-clipboard": "$t(generic.export, capitalize) $t(generic.setting_other) to $t(generic.clipboard)",
		"export-settings-current-file": "$t(generic.export, capitalize) $t(generic.setting_other) to $t(generic.current-file)",
		"import-settings-clipboard": "$t(generic.import, capitalize) $t(generic.setting_other) from $t(generic.clipboard)",
		"import-settings-current-file": "$t(generic.import, capitalize) $t(generic.setting_other) from $t(generic.current-file)"
	},
	"components": {
		"dialog": {
			"cancel": "$t(generic.cancel, capitalize)",
			"confirm": "$t(generic.confirm, capitalize)",
			"double-confirm-hint": "Press <Enter> twice to $t(generic.confirm)."
		},
		"dropdown": {
			"placeholder": "(Unselected)"
		},
		"edit-data": {
			"data": "$t(generic.data, capitalize)",
			"export": "$t(generic.export, capitalize)",
			"export-to-clipboard": "$t(generic.export, capitalize) to $t(generic.clipboard)",
			"import": "$t(generic.import, capitalize)",
			"import-from-clipboard": "$t(generic.import, capitalize) from $t(generic.clipboard)",
			"reset": "$t(generic.reset, capitalize)"
		},
		"find": {
			"case-sensitive": "Case sensitive",
			"close": "$t(generic.close, capitalize)",
			"input-placeholder": "$t(generic.find, capitalize)",
			"next": "Next",
			"previous": "Previous",
			"regex": "Regex",
			"results": "{{index, number}}/{{count, number}}",
			"too-many-results": "?/{{limit, number}}+",
			"whole-word": "Whole word"
		},
		"list": {
			"append": "Append",
			"move-down": "Move down",
			"move-up": "Move up",
			"name_few": "$t(generic.ordinal_few, capitalize)",
			"name_one": "$t(generic.ordinal_one, capitalize)",
			"name_other": "$t(generic.ordinal_other, capitalize)",
			"name_two": "$t(generic.ordinal_two, capitalize)",
			"prepend": "Prepend",
			"preset-placeholder": "$t(components.dropdown.placeholder)",
			"remove": "Remove"
		},
		"rules-list": {
			"description": "$t(generic.rule_other, capitalize) are executed from top to bottom. If no $t(generic.rule_other) match, it is excluded. JavaScript regexp literals are supported. Prepend nothing or \"+\" for inclusion and \"-\" for exclusion."
		},
		"suggest": {
			"instructions": {
				"dismiss": "esc",
				"dismiss-purpose": "to $t(generic.dismiss)",
				"navigate": "â†‘â†“",
				"navigate-purpose": "to $t(generic.navigate)",
				"use": "â†µ",
				"use-purpose": "to $t(generic.use)"
			}
		}
	},
	"dialogs": {
		"overwrite-existing-frontmatter": "$t(generic.overwrite, capitalize) $t(generic.exist_gerund) $t(generic.frontmatter)?"
	},
	"errors": {
		"error-exporting-settings": "Error $t(generic.export_gerund) $t(generic.setting_other)",
		"error-importing-settings": "Error $t(generic.import_gerund) $t(generic.setting_other)",
		"error-opening-documentation": "Error $t(generic.open_gerund) $t(generic.documentation)",
		"error-processing-frontmatter": "Error processing $t(generic.frontmatter): {{file.path}}",
		"malformed-data": "Malformed $t(generic.data)",
		"missing-interpolation": "Missing interpolation of name '{{name}}' is replaced by '{{value}}': {{text}}",
		"missing-translation": "Missing translation of key '{{key}}' is replaced by '{{value}}'",
		"no-formatter": "No formatter",
		"private-API-changed": "Private $t(generic.API) changed",
		"retry-outdated-frontmatter": "Please $t(generic.retry) as $t(generic.frontmatter) was updated in the $t(generic.background)"
	},
	"generic": {
		"API": "API",
		"app": "app",
		"background": "background",
		"cancel": "cancel",
		"clipboard": "clipboard",
		"close": "close",
		"command": "command",
		"command-palette": "$t(generic.command) palette",
		"confirm": "confirm",
		"current-file": "current $t(generic.file)",
		"data": "data",
		"disable": "disable",
		"dismiss": "dismiss",
		"edit": "edit",
		"exist": "exist",
		"exist_gerund": "existing",
		"export": "export",
		"export_gerund": "exporting",
		"file": "file",
		"find": "find",
		"frontmatter": "frontmatter",
		"import": "import",
		"import_gerund": "importing",
		"language": "$t(generic.language_one)",
		"language_one": "language",
		"language_other": "languages",
		"list": "list",
		"list-description_one": "There is {{count, number}} item.",
		"list-description_other": "There are {{count, number}} items.",
		"list-description_zero": "There are no items.",
		"navigate": "navigate",
		"notice": "notice",
		"open": "open",
		"open_gerund": "opening",
		"ordinal_few": "{{count, number}}rd",
		"ordinal_one": "{{count, number}}st",
		"ordinal_other": "{{count, number}}th",
		"ordinal_two": "{{count, number}}nd",
		"overwrite": "overwrite",
		"plugin": "plugin",
		"reset": "reset",
		"retry": "retry",
		"rule": "$t(generic.rule_one)",
		"rule_one": "rule",
		"rule_other": "rules",
		"setting": "$t(generic.setting_one)",
		"setting_one": "setting",
		"setting_other": "settings",
		"timeout": "timeout",
		"use": "use"
	},
	"settings": {
		"all-settings": "All $t(generic.setting_other)",
		"all-settings-actions": {
			"edit": "$t(generic.edit, capitalize)",
			"recover": "Recover",
			"reload": "Reload",
			"reset": "$t(generic.reset, capitalize)",
			"undo": "Undo"
		},
		"description": "To $t(generic.export) or $t(generic.import) $t(generic.setting_other), open '$t(settings.all-settings-actions.edit)' under '$t(settings.all-settings)' or $t(generic.use) the $t(generic.command-palette).",
		"error-notice-timeout": "Error $t(generic.notice) $t(generic.timeout) (s)",
		"error-notice-timeout-description": "$t(settings.notice-timeout-description)",
		"language": "$t(generic.language, capitalize)",
		"language-default": "$t(generic.use, capitalize) $t(generic.app) $t(generic.setting)",
		"language-description": "Applies to this $t(generic.plugin) only. $t(generic.language_other, capitalize) with ðŸš§ need your help with translation!",
		"notice-timeout": "$t(generic.notice, capitalize) $t(generic.timeout) (s)",
		"notice-timeout-description": "Set to 0\u00a0s for no $t(generic.timeout). Set to negative to $t(generic.disable) $t(generic.notice).",
		"reset": "$t(generic.reset, capitalize)"
	}
}